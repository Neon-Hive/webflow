/* Swiper */
/* Important so that each slider is same height */
.swiper-slide {
  height: auto !important;
}

/* Used when slider is set to autoplay */
.swiper-wrapper {
  transition-timing-function: linear !important;
}

/* Button Inactive State */
.swiper-button-disabled {
  opacity: 0.3;
  pointer-events: none;
}

/* Variables */
:root {
  /* grid */
  --column-count: 12;
  --grid-main: repeat(var(--column-count), minmax(0, 1fr));
  --grid-1: repeat(1, minmax(0, 1fr));
  --grid-2: repeat(2, minmax(0, 1fr));
  --grid-3: repeat(3, minmax(0, 1fr));
  --grid-4: repeat(4, minmax(0, 1fr));
  --grid-5: repeat(5, minmax(0, 1fr));
  --grid-6: repeat(6, minmax(0, 1fr));
  --grid-7: repeat(7, minmax(0, 1fr));
  --grid-8: repeat(8, minmax(0, 1fr));
  --grid-9: repeat(9, minmax(0, 1fr));
  --grid-10: repeat(10, minmax(0, 1fr));
  --grid-11: repeat(11, minmax(0, 1fr));
  --grid-12: repeat(12, minmax(0, 1fr));
  --grid-gap-total: calc(var(--grid-gap--main) * (var(--column-count) - 1));
  --column-width: calc((100% - var(--grid-gap-total)) / var(--column-count) + var(--grid-gap--main));
  --breakout-gutter: minmax(calc(var(--padding-global--main) - var(--grid-gap--main)), 1fr);
  --breakout-remaining: calc(var(--max-width--main) - (var(--padding-global--main) * 2));
  --breakout-start: [full-start] var(--breakout-gutter) [content-start];
  --breakout-end: [content-end] var(--breakout-gutter) [full-end];
  --grid-breakout-single: var(--breakout-start) minmax(0, var(--breakout-remaining)) var(--breakout-end);
  --grid-breakout: var(--breakout-start)
    repeat(var(--column-count), minmax(0, calc((var(--breakout-remaining) - var(--grid-gap-total)) / var(--column-count)))) var(--breakout-end);

  /* Text - Font */
  --font-weight--inherit: inherit;
  --font-weight--100: 100;
  --font-weight--200: 200;
  --font-weight--300: 300;
  --font-weight--400: 400;
  --font-weight--500: 500;
  --font-weight--600: 600;
  --font-weight--700: 700;
  --font-weight--800: 800;
  --font-weight--900: 900;
  --text-transform--none: none;
  --text-transform--uppercase: uppercase;
  --text-transform--capitalize: capitalize;
  --text-transform--lowercase: lowercase;
  --text-transform--inherit: inherit;
}

/* Components Section padding */
[data-padding-top="none"] {
  padding-top: var(--padding-section--none);
}
[data-padding-bottom="none"] {
  padding-bottom: var(--padding-section--none);
}

[data-padding-top="small"] {
  padding-top: var(--padding-section--small);
}
[data-padding-bottom="small"] {
  padding-bottom: var(--padding-section--small);
}

[data-padding-top="medium"] {
  padding-top: var(--padding-section--medium);
}
[data-padding-bottom="medium"] {
  padding-bottom: var(--padding-section--medium);
}

[data-padding-top="large"] {
  padding-top: var(--padding-section--large);
}
[data-padding-bottom="large"] {
  padding-bottom: var(--padding-section--large);
}

.svg-clip {
  position: absolute;
  width: 0;
  height: 0;
}

video {
  width: 100%;
  object-fit: cover;
}

video.wf-empty {
  padding: 0;
}

svg {
  display: block;
}

section,
header,
footer {
  position: relative;
}

button {
  background-color: unset;
  padding: unset;
  text-align: inherit;
  cursor: pointer;
}

select {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

h1,
h2,
h3,
h4,
h5,
h6,
blockquote {
  font-size: inherit;
  line-height: inherit;
  font-weight: inherit;
}

h1,
h2,
h3,
h4,
h5,
h6,
p,
label,
blockquote {
  margin-top: 0;
  margin-bottom: 0;
}

/* Make text look crisper and more legible in all browsers */
body {
  font-weight: var(--text-main--font-weight);
  text-transform: var(--text-main--text-transform);
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-smoothing: antialiased;
  text-rendering: optimizeLegibility;
}

/* hide section if it has no cms items */
[data-cms-check="true"]:not(:has(.w-dyn-item)) {
  display: none;
}

/* Focus state style for keyboard navigation for the focusable elements */
*[tabindex]:focus-visible,
input[type="file"]:focus-visible {
  outline: 0.125rem solid #4d65ff;
  outline-offset: 0.125rem;
}

/* Get rid of top margin on first element in any rich text element */
.w-richtext > :not(div):first-child,
.w-richtext > div:first-child > :first-child {
  margin-top: 0 !important;
}

/* Get rid of bottom margin on last element in any rich text element */
.w-richtext > :last-child,
.w-richtext ol li:last-child,
.w-richtext ul li:last-child {
  margin-bottom: 0 !important;
}

/* Make sure containers never lose their center alignment */
.container-medium,
.container-small,
.container-large,
.container-xlarge,
.container-xsmall,
.container-xsmall {
  margin-right: auto !important;
  margin-left: auto !important;
}

a,
.w-input,
.w-select,
.w-tab-link,
.w-nav-link,
.w-dropdown-btn,
.w-dropdown-toggle,
.w-dropdown-link {
  color: inherit;
  text-decoration: inherit;
  font-size: inherit;
}

.text-style-justify {
  hyphens: auto;
  -webkit-hyphens: auto;
  word-spacing: -0.05em;
}

/* Apply "..." after 3 lines of text */
.text-style-3lines {
  display: -webkit-box;
  overflow: hidden;
  -webkit-line-clamp: 3;
  -webkit-box-orient: vertical;
}

/* Apply "..." after 2 lines of text */
.text-style-2lines {
  display: -webkit-box;
  overflow: hidden;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
}

/* Adds inline flex display */
.display-inlineflex {
  display: inline-flex;
}

/* These classes are never overwritten */
.hide {
  display: none !important;
}

@media screen and (max-width: 991px) {
  .hide,
  .hide-tablet {
    display: none !important;
  }
  .show-tablet {
    display: block !important;
  }
}

@media screen and (max-width: 767px) {
  .hide-mobile-landscape {
    display: none !important;
  }
  .show-mobile-landscape {
    display: block !important;
  }
}

@media screen and (max-width: 479px) {
  .hide-mobile {
    display: none !important;
  }
  .show-mobile-portrait {
    display: block !important;
  }
}

.margin-0 {
  margin: 0rem !important;
}

.padding-0 {
  padding: 0rem !important;
}

.spacing-clean {
  padding: 0rem !important;
  margin: 0rem !important;
}

.margin-top {
  margin-right: 0rem !important;
  margin-bottom: 0rem !important;
  margin-left: 0rem !important;
}

.padding-top {
  padding-right: 0rem !important;
  padding-bottom: 0rem !important;
  padding-left: 0rem !important;
}

.margin-right {
  margin-top: 0rem !important;
  margin-bottom: 0rem !important;
  margin-left: 0rem !important;
}

.padding-right {
  padding-top: 0rem !important;
  padding-bottom: 0rem !important;
  padding-left: 0rem !important;
}

.margin-bottom {
  margin-top: 0rem !important;
  margin-right: 0rem !important;
  margin-left: 0rem !important;
}

.padding-bottom {
  padding-top: 0rem !important;
  padding-right: 0rem !important;
  padding-left: 0rem !important;
}

.margin-left {
  margin-top: 0rem !important;
  margin-right: 0rem !important;
  margin-bottom: 0rem !important;
}

.padding-left {
  padding-top: 0rem !important;
  padding-right: 0rem !important;
  padding-bottom: 0rem !important;
}

.margin-horizontal {
  margin-top: 0rem !important;
  margin-bottom: 0rem !important;
}

.padding-horizontal {
  padding-top: 0rem !important;
  padding-bottom: 0rem !important;
}

.margin-vertical {
  margin-right: 0rem !important;
  margin-left: 0rem !important;
}

.padding-vertical {
  padding-right: 0rem !important;
  padding-left: 0rem !important;
}
